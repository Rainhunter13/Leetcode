class Solution {

private:
    string parseInt(string& s) {
        int i = 0;
        while (i < s.size() && s[i]==' ') {
            i++;
        }
        string p;
        if (i == s.size()) return p;
        if (s[i] == '-' || s[i] == '+') {
            p += s[i++];
        }
        while (i < s.size() && isdigit(s[i])) {
            p += s[i++];
        }
        return p;
    }
    
    int stringToInt(string& s) {
        long long ans = 0;
        int sign = 1;
        for (int i = 0; i < s.size(); i++) {
            if (s[i] == '+') continue;
            if (s[i] == '-') {
                sign = -1; 
                continue;
            }
            ans += s[i] - '0';
            if (i < s.size() - 1) ans *= 10;
            if (ans > INT_MAX) {
                if (sign == 1) return INT_MAX; 
                else return INT_MIN;
            }
        }
        return sign*ans;
    }
    
public:
    int myAtoi(string str) {
        string s = parseInt(str);
        return stringToInt(s);
    }
};
